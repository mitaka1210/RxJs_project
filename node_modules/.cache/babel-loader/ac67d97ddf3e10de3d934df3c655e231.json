{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n// Components\nimport { VTabTransition, VTabReverseTransition } from '../transitions'; // Mixins\n\nimport { inject as RegistrableInject } from '../../mixins/registrable'; // Helpers\n\nimport { convertToUnit } from '../../util/helpers'; // Utilities\n\nimport mixins from '../../util/mixins';\nvar baseMixins = mixins(RegistrableInject('stepper', 'v-stepper-content', 'v-stepper'));\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-stepper-content',\n  inject: {\n    isVerticalProvided: {\n      from: 'isVertical'\n    }\n  },\n  props: {\n    step: {\n      type: [Number, String],\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      height: 0,\n      // Must be null to allow\n      // previous comparison\n      isActive: null,\n      isReverse: false,\n      isVertical: this.isVerticalProvided\n    };\n  },\n  computed: {\n    computedTransition: function computedTransition() {\n      // Fix for #8978\n      var reverse = this.$vuetify.rtl ? !this.isReverse : this.isReverse;\n      return reverse ? VTabReverseTransition : VTabTransition;\n    },\n    styles: function styles() {\n      if (!this.isVertical) return {};\n      return {\n        height: convertToUnit(this.height)\n      };\n    }\n  },\n  watch: {\n    isActive: function isActive(current, previous) {\n      // If active and the previous state\n      // was null, is just booting up\n      if (current && previous == null) {\n        this.height = 'auto';\n        return;\n      }\n\n      if (!this.isVertical) return;\n      if (this.isActive) this.enter();else this.leave();\n    }\n  },\n  mounted: function mounted() {\n    this.$refs.wrapper.addEventListener('transitionend', this.onTransition, false);\n    this.stepper && this.stepper.register(this);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$refs.wrapper.removeEventListener('transitionend', this.onTransition, false);\n    this.stepper && this.stepper.unregister(this);\n  },\n  methods: {\n    onTransition: function onTransition(e) {\n      if (!this.isActive || e.propertyName !== 'height') return;\n      this.height = 'auto';\n    },\n    enter: function enter() {\n      var _this = this;\n\n      var scrollHeight = 0; // Render bug with height\n\n      requestAnimationFrame(function () {\n        scrollHeight = _this.$refs.wrapper.scrollHeight;\n      });\n      this.height = 0; // Give the collapsing element time to collapse\n\n      setTimeout(function () {\n        return _this.isActive && (_this.height = scrollHeight || 'auto');\n      }, 450);\n    },\n    leave: function leave() {\n      var _this2 = this;\n\n      this.height = this.$refs.wrapper.clientHeight;\n      setTimeout(function () {\n        return _this2.height = 0;\n      }, 10);\n    },\n    toggle: function toggle(step, reverse) {\n      this.isActive = step.toString() === this.step.toString();\n      this.isReverse = reverse;\n    }\n  },\n  render: function render(h) {\n    var contentData = {\n      staticClass: 'v-stepper__content'\n    };\n    var wrapperData = {\n      staticClass: 'v-stepper__wrapper',\n      style: this.styles,\n      ref: 'wrapper'\n    };\n\n    if (!this.isVertical) {\n      contentData.directives = [{\n        name: 'show',\n        value: this.isActive\n      }];\n    }\n\n    var wrapper = h('div', wrapperData, [this.$slots.default]);\n    var content = h('div', contentData, [wrapper]);\n    return h(this.computedTransition, {\n      on: this.$listeners\n    }, [content]);\n  }\n});","map":{"version":3,"mappings":"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","names":["VTabTransition","VTabReverseTransition","inject","RegistrableInject","convertToUnit","mixins","baseMixins","extend","name","isVerticalProvided","from","props","step","type","Number","String","required","data","height","isActive","isReverse","isVertical","computed","computedTransition","reverse","$vuetify","rtl","styles","watch","current","previous","enter","leave","mounted","$refs","wrapper","addEventListener","onTransition","stepper","register","beforeDestroy","removeEventListener","unregister","methods","e","propertyName","scrollHeight","requestAnimationFrame","setTimeout","clientHeight","toggle","toString","render","h","contentData","staticClass","wrapperData","style","ref","directives","value","$slots","default","content","on","$listeners"],"sourceRoot":"","sources":["../../../src/components/VStepper/VStepperContent.ts"],"sourcesContent":["// Components\nimport {\n  VTabTransition,\n  VTabReverseTransition,\n} from '../transitions'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Helpers\nimport { convertToUnit } from '../../util/helpers'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode, FunctionalComponentOptions, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  RegistrableInject('stepper', 'v-stepper-content', 'v-stepper')\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    wrapper: HTMLElement\n  }\n  isVerticalProvided: boolean\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-stepper-content',\n\n  inject: {\n    isVerticalProvided: {\n      from: 'isVertical',\n    },\n  },\n\n  props: {\n    step: {\n      type: [Number, String],\n      required: true,\n    },\n  },\n\n  data () {\n    return {\n      height: 0 as number | string,\n      // Must be null to allow\n      // previous comparison\n      isActive: null as boolean | null,\n      isReverse: false,\n      isVertical: this.isVerticalProvided,\n    }\n  },\n\n  computed: {\n    computedTransition (): FunctionalComponentOptions {\n      // Fix for #8978\n      const reverse = this.$vuetify.rtl ? !this.isReverse : this.isReverse\n\n      return reverse\n        ? VTabReverseTransition\n        : VTabTransition\n    },\n    styles (): object {\n      if (!this.isVertical) return {}\n\n      return {\n        height: convertToUnit(this.height),\n      }\n    },\n  },\n\n  watch: {\n    isActive (current, previous) {\n      // If active and the previous state\n      // was null, is just booting up\n      if (current && previous == null) {\n        this.height = 'auto'\n        return\n      }\n\n      if (!this.isVertical) return\n\n      if (this.isActive) this.enter()\n      else this.leave()\n    },\n  },\n\n  mounted () {\n    this.$refs.wrapper.addEventListener(\n      'transitionend',\n      this.onTransition,\n      false\n    )\n    this.stepper && this.stepper.register(this)\n  },\n\n  beforeDestroy () {\n    this.$refs.wrapper.removeEventListener(\n      'transitionend',\n      this.onTransition,\n      false\n    )\n    this.stepper && this.stepper.unregister(this)\n  },\n\n  methods: {\n    onTransition (e: TransitionEvent) {\n      if (!this.isActive ||\n        e.propertyName !== 'height'\n      ) return\n\n      this.height = 'auto'\n    },\n    enter () {\n      let scrollHeight = 0\n\n      // Render bug with height\n      requestAnimationFrame(() => {\n        scrollHeight = this.$refs.wrapper.scrollHeight\n      })\n\n      this.height = 0\n\n      // Give the collapsing element time to collapse\n      setTimeout(() => this.isActive && (this.height = (scrollHeight || 'auto')), 450)\n    },\n    leave () {\n      this.height = this.$refs.wrapper.clientHeight\n      setTimeout(() => (this.height = 0), 10)\n    },\n    toggle (step: string | number, reverse: boolean) {\n      this.isActive = step.toString() === this.step.toString()\n      this.isReverse = reverse\n    },\n  },\n\n  render (h): VNode {\n    const contentData = {\n      staticClass: 'v-stepper__content',\n    } as VNodeData\n    const wrapperData = {\n      staticClass: 'v-stepper__wrapper',\n      style: this.styles,\n      ref: 'wrapper',\n    }\n\n    if (!this.isVertical) {\n      contentData.directives = [{\n        name: 'show',\n        value: this.isActive,\n      }]\n    }\n\n    const wrapper = h('div', wrapperData, [this.$slots.default])\n    const content = h('div', contentData, [wrapper])\n\n    return h(this.computedTransition, {\n      on: this.$listeners,\n    }, [content])\n  },\n})\n"]},"metadata":{},"sourceType":"module"}