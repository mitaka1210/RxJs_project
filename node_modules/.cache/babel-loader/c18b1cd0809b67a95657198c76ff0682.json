{"ast":null,"code":"import _asyncToGenerator from \"/Users/dimitar/Documents/projects/test__Project_RxJS_Vladi/Vladi/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/dimitar/Documents/projects/test__Project_RxJS_Vladi/Vladi/front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/dimitar/Documents/projects/test__Project_RxJS_Vladi/Vladi/front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport dependencyResolver from '@/core/dependency-resolver'; // Data providers\n\nimport AccountsProvider from '@/accounts-management/accounts-management.provider';\nimport UsersProvider from \"@/post-details-managment/post-details.provider\"; // Services\n\nimport AccountsManager from '@/accounts-management/accounts-management.service';\nimport usersManager from \"@/post-details-managment/post-details.service\";\n\nvar DependencyContainer = /*#__PURE__*/function () {\n  function DependencyContainer() {\n    _classCallCheck(this, DependencyContainer);\n  }\n\n  _createClass(DependencyContainer, [{\n    key: \"configure\",\n    value: function () {\n      var _configure = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", new Promise(function (resolve) {\n                  dependencyResolver.register('AccountsProvider', AccountsProvider);\n                  dependencyResolver.register('AccountsManager', AccountsManager);\n                  dependencyResolver.register('UsersProvider', UsersProvider);\n                  dependencyResolver.register('usersManager', usersManager);\n                  resolve();\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function configure() {\n        return _configure.apply(this, arguments);\n      }\n\n      return configure;\n    }()\n  }]);\n\n  return DependencyContainer;\n}();\n\nexport { DependencyContainer as default };","map":{"version":3,"sources":["/Users/dimitar/Documents/projects/test__Project_RxJS_Vladi/Vladi/front/src/core/dependency-container.js"],"names":["dependencyResolver","AccountsProvider","UsersProvider","AccountsManager","usersManager","DependencyContainer","Promise","resolve","register"],"mappings":";;;;;AAAA,OAAOA,kBAAP,MAA+B,4BAA/B,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,oDAA7B;AACA,OAAOC,aAAP,MAA0B,gDAA1B,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,OAAOC,YAAP,MAAyB,+CAAzB;;IAEqBC,mB;;;;;;;;+EACjB;AAAA;AAAA;AAAA;AAAA;AAAA,iDACW,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC1BP,kBAAAA,kBAAkB,CAACQ,QAAnB,CAA4B,kBAA5B,EAAgDP,gBAAhD;AACAD,kBAAAA,kBAAkB,CAACQ,QAAnB,CAA4B,iBAA5B,EAA+CL,eAA/C;AACAH,kBAAAA,kBAAkB,CAACQ,QAAnB,CAA4B,eAA5B,EAA6CN,aAA7C;AACAF,kBAAAA,kBAAkB,CAACQ,QAAnB,CAA4B,cAA5B,EAA4CJ,YAA5C;AACAG,kBAAAA,OAAO;AACV,iBANM,CADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;SADiBF,mB","sourcesContent":["import dependencyResolver from '@/core/dependency-resolver'\n\n// Data providers\nimport AccountsProvider from '@/accounts-management/accounts-management.provider'\nimport UsersProvider from \"@/post-details-managment/post-details.provider\";\n\n// Services\nimport AccountsManager from '@/accounts-management/accounts-management.service'\nimport usersManager from \"@/post-details-managment/post-details.service\";\n\nexport default class DependencyContainer {\n    async configure() {\n        return new Promise(resolve => {\n            dependencyResolver.register('AccountsProvider', AccountsProvider)\n            dependencyResolver.register('AccountsManager', AccountsManager)\n            dependencyResolver.register('UsersProvider', UsersProvider)\n            dependencyResolver.register('usersManager', usersManager)\n            resolve()\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}